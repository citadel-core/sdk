import { ApiConnection } from "platform/connection.js";
import type { GetInfoResponse } from "../autogenerated-types";

export class LNDInfo extends ApiConnection {
  constructor(baseUrl: string) {
    super(`${baseUrl}${baseUrl.endsWith("/") ? "" : "/"}info`);
  }

  public set jwt(newJwt: string) {
    this._jwt = newJwt;
  }

  public async generalInfo(): Promise<GetInfoResponse> {
    return (await this.get("")) as GetInfoResponse;
  }

  public async publicUris(): Promise<string[]> {
    return (await this.get("/uris")) as string[];
  }

  public async getStatus(): Promise<{
    operational: boolean;
    unlocked: boolean;
  }> {
    return (await this.get("/status")) as {
      operational: boolean;
      unlocked: boolean;
    };
  }

  public async syncStatus(): Promise<{
    operational: boolean;
    unlocked: boolean;
  }> {
    return (await this.get("/sync")) as {
      operational: boolean;
      unlocked: boolean;
    };
  }

  public async version(): Promise<string> {
    return ((await this.get("/version")) as { version: string }).version;
  }

  public async alias(): Promise<string> {
    return ((await this.get("/alias")) as { alias: string }).alias;
  }
}
